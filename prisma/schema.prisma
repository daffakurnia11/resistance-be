// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Lobby {
  id         String     @id @default(uuid()) @db.Uuid
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime   @updatedAt @db.Timestamptz(6)
  deleted_at DateTime?  @db.Timestamptz(6) // Nullable
  room_code  String     @unique @db.Text
  players    Player[]
  lobby_logs LobbyLog[]

  @@map(name: "lobbies")
}

model LobbyLog {
  id         String    @id @default(uuid()) @db.Uuid
  player_id  String    @db.Uuid
  lobby_id   String    @db.Uuid
  action     String    @db.VarChar(11)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @updatedAt @db.Timestamptz(6)
  deleted_at DateTime? @db.Timestamptz(6) // Nullable

  player Player @relation(fields: [player_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  lobby  Lobby  @relation(fields: [lobby_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@map("lobby_logs")
}

model Player {
  id         String     @id @default(uuid()) @db.Uuid
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  updated_at DateTime   @updatedAt @db.Timestamptz(6)
  deleted_at DateTime?  @db.Timestamptz(6) // Nullable
  name       String     @db.Text
  lobby      Lobby?     @relation(fields: [lobby_id], references: [id])
  lobby_id   String?    @db.Uuid
  room_role  RoomRole   @default(MEMBER)
  lobby_logs LobbyLog[]

  @@map(name: "players")
}

enum RoomRole {
  MASTER
  MEMBER
}
